name: Continuous Integration & Deployment

on:
  push:
    branches: [master]
  pull_request:
  release:
    types: [published]

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome91-ff89

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-node-yarn
      - run: |-
          yarn lint
      - run: |-
          yarn test src
      - name: create env file
        shell: bash
        run: |-
          touch .env.local
          echo "REACT_APP_OAUTH_HOST=https://mock.en-marche.fr" >> .env.local
      - name: Cypress
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          wait-on: 'http://localhost:3000'
          browser: chrome
      - name: Archive test screenshots
        uses: actions/upload-artifact@v2.3.1
        with:
          name: screenshots
          path: cypress/screenshots
        if: ${{ failure() }}

  deploy-staging:
    name: Deploy to Staging üçæ
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event.ref == 'refs/heads/master'
    environment: staging

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-node-yarn
      - uses: ./.github/actions/gcs-deploy
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY_GCS_PUSHER_DATACORNER }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          bucket: ${{ secrets.GCP_GCS_BUCKET }}
          react_app_oauth_host: ${{ secrets.REACT_APP_OAUTH_HOST }}
          react_app_oauth_client_id: ${{ secrets.REACT_APP_OAUTH_CLIENT_ID }}
          react_app_internal_app_id: ${{ secrets.REACT_APP_INTERNAL_APP_ID }}
          react_app_sentry_dsn: ${{ secrets.REACT_APP_SENTRY_DSN }}
          sentry_auth_token: ${{ secrets.SENTRY_AUTH_TOKEN  }}
          react_app_unlayer_project_id: ${{ secrets.REACT_APP_UNLAYER_PROJECT_ID }}
          react_app_mapbox_token: ${{ secrets.REACT_APP_MAPBOX_TOKEN }}
          react_app_mapbox_style: ${{ secrets.REACT_APP_MAPBOX_STYLE }}
          react_app_version: ${GITHUB_SHA::7}
          react_app_environment: staging

  deploy-prod:
    name: Deploy to Prod üçæ
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'release'
    environment: production

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-node-yarn
      - uses: ./.github/actions/gcs-deploy
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY_GCS_PUSHER_DATACORNER }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          bucket: ${{ secrets.GCP_GCS_BUCKET }}
          react_app_oauth_host: ${{ secrets.REACT_APP_OAUTH_HOST }}
          react_app_oauth_client_id: ${{ secrets.REACT_APP_OAUTH_CLIENT_ID }}
          react_app_internal_app_id: ${{ secrets.REACT_APP_INTERNAL_APP_ID }}
          react_app_sentry_dsn: ${{ secrets.REACT_APP_SENTRY_DSN }}
          sentry_auth_token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          react_app_unlayer_project_id: ${{ secrets.REACT_APP_UNLAYER_PROJECT_ID }}
          react_app_mapbox_token: ${{ secrets.REACT_APP_MAPBOX_TOKEN }}
          react_app_mapbox_style: ${{ secrets.REACT_APP_MAPBOX_STYLE }}
          react_app_version: ${{ github.event.release.tag_name }}
          react_app_environment: production
