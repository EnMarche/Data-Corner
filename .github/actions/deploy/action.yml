name: GCP Deploy
description: Build Docker image and deploy on Cloud Run

inputs:
  service_account_key_pusher:
    description: The GCP Service Account key for Docker image push
    required: true
  service_account_key_deployer:
    description: The GCP Service Account key for Deploy
    required: true
  gcp_zone:
    description: GCP zone
    required: true
  gmaps_api_key:
    description: Google Maps API key
    required: true
  project_id:
    description: The GCP Project ID
    required: true
  repository_project_id:
    description: The GCP Repository Project ID
    required: true
  cloud_run_name:
    description: Cloud Run name
    required: true
  react_app_oauth_host:
    description: The OAuth host used by the app
    required: true
  react_app_api_host:
    description: The API host used by the app
    required: true
  react_app_oauth_client_id:
    description: The OAuth client id used by the app
    required: true
  react_app_internal_app_id:
    description: The Internal app id used by the app
    required: true
  react_app_sentry_dsn:
    description: The Sentry DSN used by the app
    required: true
  react_app_unlayer_project_id:
    description: The Unlayer project id used by the app
    required: true
  react_app_mapbox_token:
    description: The Mapbox token used by the app
    required: true
  react_app_mapbox_style:
    description: The Mapbox style used by the app
    required: true
  react_app_version:
    description: The app version
    required: true
  react_app_environment:
    description: The app environment
    required: true
  sentry_auth_token:
    description: Sentry token
    required: true
  sentry_org:
    description: Sentry org
    required: true
  sentry_project:
    description: Sentry project
    required: true

runs:
  using: composite
  steps:
    - shell: bash
      run: |-
        echo "" > .env.production
        echo "REACT_APP_API_HOST=${{ inputs.react_app_api_host }}" >> .env.production
        echo "REACT_APP_OAUTH_HOST=${{ inputs.react_app_oauth_host }}" >> .env.production
        echo "REACT_APP_OAUTH_CLIENT_ID=${{ inputs.react_app_oauth_client_id }}" >> .env.production
        echo "REACT_APP_INTERNAL_APP_ID=${{ inputs.react_app_internal_app_id }}" >> .env.production
        echo "REACT_APP_SENTRY_DSN=${{ inputs.react_app_sentry_dsn }}" >> .env.production
        echo "SENTRY_AUTH_TOKEN=${{ inputs.sentry_auth_token }}" >> .env.production
        echo "SENTRY_ORG=${{ inputs.sentry_org }}" >> .env.production
        echo "SENTRY_PROJECT=${{ inputs.sentry_project }}" >> .env.production
        echo "REACT_APP_GMAPS_API_KEY=${{ inputs.gmaps_api_key }}" >> .env.production
        echo "REACT_APP_UNLAYER_PROJECT_ID=${{ inputs.react_app_unlayer_project_id }}" >> .env.production
        echo "REACT_APP_MAPBOX_TOKEN=${{ inputs.react_app_mapbox_token }}" >> .env.production
        echo "REACT_APP_MAPBOX_STYLE=${{ inputs.react_app_mapbox_style }}" >> .env.production
        echo "REACT_APP_VERSION=${{ inputs.react_app_version }}" >> .env.production
        echo "REACT_APP_ENVIRONMENT=${{ inputs.react_app_environment }}" >> .env.production

    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.service_account_key_pusher }}

    - shell: bash
      name: Build & Publish
      run: |-
        gcloud auth --quiet configure-docker
        docker build --tag "${{ env.DOCKER_IMAGE }}:${{ inputs.react_app_version }}" .
        docker push ${{ env.DOCKER_IMAGE }} --all-tags

    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.service_account_key_deployer }}

    - uses: google-github-actions/deploy-cloudrun@v0
      name: Deploy to Cloud Run
      with:
        service: ${{ inputs.cloud_run_name }}
        image: '${{ env.DOCKER_IMAGE }}:${{ inputs.react_app_version }}'
        project_id: ${{ inputs.project_id }}
        region: ${{ inputs.gcp_zone }}
